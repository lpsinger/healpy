name: build

on:
  push:
  pull_request:
  release:
    types:
      - published

jobs:

  source:
    name: Build source package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: docker://python
        with:
          args: 'sh -c "pip install build && python -m build --sdist"'

      - uses: actions/upload-artifact@v4
        with:
          name: source
          path: dist/*

  wheels-windows:
    name: Build binary packages for Windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-python@v5
        id: python
        with:
          python-version: "3.8 - 3.12"
          update-environment: false

      - name: Build wheels
        shell: bash
        run: pipx run cibuildwheel
        env:
          CIBW_BEFORE_ALL_WINDOWS: vcpkg install pkgconf
          CIBW_ENVIRONMENT: MPLBACKEND=agg
          # Skip PyPy builds; Astropy wheels are not built for PyPy.
          # Skip i686 builds.
          # Skip MUSL libc builds.
          CIBW_SKIP: 'pp* *_i686 *-musllinux_*'

      - uses: actions/upload-artifact@v4
        with:
          name: windows-latest
          path: wheelhouse/*

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: [source, wheels-windows]
    if: github.event_name == 'release'

    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: artifact/
